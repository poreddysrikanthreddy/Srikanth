// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */
/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */
// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: q7tTSNWitJe6Z5iHR4V1pK
// Component: goQT5PSwAOOKP
import * as React from "react";
import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/react-web/lib/host";
import {
  classNames,
  createPlasmicElementProxy,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import Navbar from "../../Navbar"; // plasmic-import: dL_lNqsZGs1RE/component
import ProductGrid from "../../ProductGrid"; // plasmic-import: CK8q57nTdTKF2b/component
import { ProductBox } from "@plasmicpkgs/commerce"; // plasmic-import: 1gYJf_XBZUAD/codeComponent
import ProductCard from "../../ProductCard"; // plasmic-import: MaGsVk4ByJFhZ/component
import { ProductTextField } from "@plasmicpkgs/commerce"; // plasmic-import: S1F4q0wN6b/codeComponent
import { ProductCollection } from "@plasmicpkgs/commerce"; // plasmic-import: vU2jzVAnFP/codeComponent
import { ProductMedia } from "@plasmicpkgs/commerce"; // plasmic-import: qpULM0wwWW/codeComponent
import Hero from "../../Hero"; // plasmic-import: anrw6bZTy3FOzl/component
import Footer from "../../Footer"; // plasmic-import: LnTbL5unuMe-CO/component
import { useScreenVariants as useScreenVariantso6F3HL2InS09Fs } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: o6f3hL2inS09FS/globalVariant
import "@plasmicapp/react-web/lib/plasmic.css";
import plasmic_plasmic_kit_q_4_color_tokens_css from "../plasmic_kit_color_tokens/plasmic_plasmic_kit_color_tokens.module.css"; // plasmic-import: 95xp9cYcv7HrNWpFWWhbcv/projectcss
import projectcss from "./plasmic_vercel_commerce_theme.module.css"; // plasmic-import: q7tTSNWitJe6Z5iHR4V1pK/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: goQT5PSwAOOKP/css

export const PlasmicHomepage__VariantProps = new Array();

export const PlasmicHomepage__ArgProps = new Array();

const __wrapUserFunction =
  globalThis.__PlasmicWrapUserFunction ?? ((loc, fn) => fn());

const __wrapUserPromise =
  globalThis.__PlasmicWrapUserPromise ??
  (async (loc, promise) => {
    return await promise;
  });

function PlasmicHomepage__RenderFunc(props) {
  const { variants, overrides, forNode } = props;
  const $ctx = ph.useDataEnv?.() || {};
  const args = React.useMemo(() => Object.assign({}, props.args), [props.args]);
  const $props = {
    ...args,
    ...variants
  };
  const refsRef = React.useRef({});
  const $refs = refsRef.current;
  const currentUser = p.useCurrentUser?.() || {};
  const [$queries, setDollarQueries] = React.useState({});
  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantso6F3HL2InS09Fs()
  });
  return (
    <React.Fragment>
      <div className={projectcss.plasmic_page_wrapper}>
        <p.Stack
          as={"div"}
          data-plasmic-name={"root"}
          data-plasmic-override={overrides.root}
          data-plasmic-root={true}
          data-plasmic-for-node={forNode}
          hasGap={true}
          className={classNames(
            projectcss.all,
            projectcss.root_reset,
            projectcss.plasmic_default_styles,
            projectcss.plasmic_mixins,
            projectcss.plasmic_tokens,
            plasmic_plasmic_kit_q_4_color_tokens_css.plasmic_tokens,
            sty.root
          )}
        >
          <Navbar
            data-plasmic-name={"navbar"}
            data-plasmic-override={overrides.navbar}
            className={classNames("__wab_instance", sty.navbar)}
          />

          <ProductGrid
            className={classNames("__wab_instance", sty.productGrid__io4HK)}
            product0={
              <ProductBox
                className={classNames("__wab_instance", sty.productBox__pd8Eo)}
                id={"conf-shirt"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <React.Fragment>
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__ofpeQ
                        )}
                        color={"violet"}
                      />

                      <ProductCollection
                        data-plasmic-name={"productCollection"}
                        data-plasmic-override={overrides.productCollection}
                        className={classNames(
                          "__wab_instance",
                          sty.productCollection
                        )}
                        emptyMessage={
                          <ph.DataCtxReader>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__imp6S
                                )}
                              >
                                {"No product found!"}
                              </div>
                            )}
                          </ph.DataCtxReader>
                        }
                        loadingMessage={
                          <ph.DataCtxReader>
                            {$ctx => (
                              <div
                                className={classNames(
                                  projectcss.all,
                                  projectcss.__wab_text,
                                  sty.text__piOfp
                                )}
                              >
                                {"Loading..."}
                              </div>
                            )}
                          </ph.DataCtxReader>
                        }
                      >
                        <ph.DataCtxReader>
                          {$ctx => (
                            <div
                              className={classNames(
                                projectcss.all,
                                sty.freeBox__v4KYj
                              )}
                            >
                              <ProductTextField
                                data-plasmic-name={"productTextField"}
                                data-plasmic-override={
                                  overrides.productTextField
                                }
                                className={classNames(
                                  "__wab_instance",
                                  sty.productTextField
                                )}
                                field={"name"}
                              />

                              <ProductMedia
                                data-plasmic-name={"productMedia"}
                                data-plasmic-override={overrides.productMedia}
                                className={classNames(
                                  "__wab_instance",
                                  sty.productMedia
                                )}
                              />
                            </div>
                          )}
                        </ph.DataCtxReader>
                      </ProductCollection>
                    </React.Fragment>
                  )}
                </ph.DataCtxReader>
              </ProductBox>
            }
            product1={
              <ProductBox
                className={classNames("__wab_instance", sty.productBox__heYo1)}
                id={"quarter-zip"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__yb1Xi
                      )}
                      color={"white"}
                    />
                  )}
                </ph.DataCtxReader>
              </ProductBox>
            }
            product2={
              <ProductBox
                className={classNames("__wab_instance", sty.productBox__sooUz)}
                id={"sticker"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__cVk99
                      )}
                      color={"pink"}
                    />
                  )}
                </ph.DataCtxReader>
              </ProductBox>
            }
          />

          <div
            data-plasmic-name={"marquee"}
            data-plasmic-override={overrides.marquee}
            className={classNames(projectcss.all, sty.marquee)}
          >
            {true ? (
              <div
                className={classNames(projectcss.all, sty.freeBox__nSi3B)}
                test={"test"}
              >
                <ProductBox
                  className={classNames(
                    "__wab_instance",
                    sty.productBox__ieBcJ
                  )}
                  id={"gid://shopify/Product/5447322697892"}
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__jwVJi
                        )}
                        shape={"slim"}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductBox>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___6Tnm2)}>
                <ProductBox
                  className={classNames(
                    "__wab_instance",
                    sty.productBox__g6IwK
                  )}
                  id={"gid://shopify/Product/5447323156644"}
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__xu2Mq
                        )}
                        shape={"slim"}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductBox>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox___0Qsuk)}>
                <ProductBox
                  className={classNames(
                    "__wab_instance",
                    sty.productBox__l4NAw
                  )}
                  id={"gid://shopify/Product/5447323812004"}
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__ebj2
                        )}
                        shape={"slim"}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductBox>
              </div>
            ) : null}
          </div>
          {true ? (
            <div className={classNames(projectcss.all, sty.freeBox__haWod)}>
              <Hero className={classNames("__wab_instance", sty.hero__t1Amr)} />
            </div>
          ) : null}
          <ProductGrid
            className={classNames("__wab_instance", sty.productGrid__cmBKa)}
            layout={"b"}
            product0={
              <ProductBox
                className={classNames("__wab_instance", sty.productBox__ha0RM)}
                id={"gid://shopify/Product/5447322697892"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__xcObc
                      )}
                      color={"violet"}
                    />
                  )}
                </ph.DataCtxReader>
              </ProductBox>
            }
            product1={
              <ProductBox
                className={classNames("__wab_instance", sty.productBox___0Eu8J)}
                id={"gid://shopify/Product/5447323156644"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard__ggDRa
                      )}
                      color={"white"}
                    />
                  )}
                </ph.DataCtxReader>
              </ProductBox>
            }
            product2={
              <ProductBox
                className={classNames("__wab_instance", sty.productBox__qwC5)}
                id={"gid://shopify/Product/5447323812004"}
              >
                <ph.DataCtxReader>
                  {$ctx => (
                    <ProductCard
                      className={classNames(
                        "__wab_instance",
                        sty.productCard___5AniO
                      )}
                      color={"pink"}
                    />
                  )}
                </ph.DataCtxReader>
              </ProductBox>
            }
          />

          <div
            data-plasmic-name={"marquee2"}
            data-plasmic-override={overrides.marquee2}
            className={classNames(projectcss.all, sty.marquee2)}
          >
            {true ? (
              <div
                className={classNames(projectcss.all, sty.freeBox__kg9JZ)}
                test={"test"}
              >
                <ProductBox
                  className={classNames(
                    "__wab_instance",
                    sty.productBox___1FH5B
                  )}
                  id={"gid://shopify/Product/5447324270756"}
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__tUkL
                        )}
                        color={"black"}
                        shape={"slim"}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductBox>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__jBbN)}>
                <ProductBox
                  className={classNames(
                    "__wab_instance",
                    sty.productBox__rsuLa
                  )}
                  id={"gid://shopify/Product/5447324729508"}
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__qrwDn
                        )}
                        color={"black"}
                        shape={"slim"}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductBox>
              </div>
            ) : null}
            {true ? (
              <div className={classNames(projectcss.all, sty.freeBox__uldvx)}>
                <ProductBox
                  className={classNames(
                    "__wab_instance",
                    sty.productBox___2RwvR
                  )}
                  id={"gid://shopify/Product/5447325024420"}
                >
                  <ph.DataCtxReader>
                    {$ctx => (
                      <ProductCard
                        className={classNames(
                          "__wab_instance",
                          sty.productCard__iLcp
                        )}
                        color={"black"}
                        shape={"slim"}
                      />
                    )}
                  </ph.DataCtxReader>
                </ProductBox>
              </div>
            ) : null}
          </div>
          <Footer
            data-plasmic-name={"footer"}
            data-plasmic-override={overrides.footer}
            className={classNames("__wab_instance", sty.footer)}
          />
        </p.Stack>
      </div>
    </React.Fragment>
  );
}

const PlasmicDescendants = {
  root: [
    "root",
    "navbar",
    "productCollection",
    "productTextField",
    "productMedia",
    "marquee",
    "marquee2",
    "footer"
  ],

  navbar: ["navbar"],
  productCollection: ["productCollection", "productTextField", "productMedia"],
  productTextField: ["productTextField"],
  productMedia: ["productMedia"],
  marquee: ["marquee"],
  marquee2: ["marquee2"],
  footer: ["footer"]
};

function makeNodeComponent(nodeName) {
  const func = function (props) {
    const { variants, args, overrides } = React.useMemo(
      () =>
        deriveRenderOpts(props, {
          name: nodeName,
          descendantNames: [...PlasmicDescendants[nodeName]],
          internalArgPropNames: PlasmicHomepage__ArgProps,
          internalVariantPropNames: PlasmicHomepage__VariantProps
        }),
      [props, nodeName]
    );
    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    navbar: makeNodeComponent("navbar"),
    productCollection: makeNodeComponent("productCollection"),
    productTextField: makeNodeComponent("productTextField"),
    productMedia: makeNodeComponent("productMedia"),
    marquee: makeNodeComponent("marquee"),
    marquee2: makeNodeComponent("marquee2"),
    footer: makeNodeComponent("footer"),
    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps,
    // Page metadata
    pageMetadata: {
      title: "",
      description: "",
      ogImageSrc: "",
      canonical: ""
    }
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
